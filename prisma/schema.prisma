// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  address   String   @unique
  ensName   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  tandas TandaMember[]
  claims ClaimRecord[]
  transactions Transaction[]

  @@map("users")
}

model Tanda {
  id              Int      @id @default(autoincrement())
  contractId      BigInt   @unique
  name            String
  description     String?
  creatorAddress  String
  monthlyAmount   BigInt
  maxMembers      Int
  currentMembers  Int      @default(1)
  currentRound    Int      @default(0)
  isActive        Boolean  @default(false)
  isCompleted     Boolean  @default(false)
  startTime       DateTime?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  // Relations
  members TandaMember[]
  rounds  TandaRound[]

  @@map("tandas")
}

model TandaMember {
  id        String   @id @default(cuid())
  tandaId   Int
  userAddress String
  joinedAt  DateTime @default(now())
  isActive  Boolean  @default(true)

  // Relations
  tanda Tanda @relation(fields: [tandaId], references: [id], onDelete: Cascade)
  user  User  @relation(fields: [userAddress], references: [address])

  @@unique([tandaId, userAddress])
  @@map("tanda_members")
}

model TandaRound {
  id           String    @id @default(cuid())
  tandaId      Int
  roundNumber  Int
  recipient    String
  totalAmount  BigInt
  completedAt  DateTime?
  createdAt    DateTime  @default(now())

  // Relations
  tanda Tanda @relation(fields: [tandaId], references: [id], onDelete: Cascade)

  @@unique([tandaId, roundNumber])
  @@map("tanda_rounds")
}

model ClaimRecord {
  id        String   @id @default(cuid())
  userAddress String
  amount     BigInt
  txHash     String?
  claimedAt  DateTime @default(now())

  // Relations
  user User @relation(fields: [userAddress], references: [address])

  @@map("claim_records")
}

model Transaction {
  id          String   @id @default(cuid())
  userAddress String
  type        String   // 'received' | 'sent'
  amount      BigInt
  currency    String
  description String
  txHash      String?
  createdAt   DateTime @default(now())

  // Relations
  user User @relation(fields: [userAddress], references: [address])

  @@map("transactions")
}
